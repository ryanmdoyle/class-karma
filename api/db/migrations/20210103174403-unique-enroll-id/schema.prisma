datasource DS {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// MODELS //

model User {
  id           String       @id @default(uuid())
  uid          String       @unique
  firstName    String
  lastName     String
  email        String       @unique
  profileImage String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
  roles        UserRole[]
  feedback     Feedback[]
  redeemed     Redeemed[]
  groups       Group[]
  enrollments  Enrollment[]
}

model UserRole {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Feedback {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  behavior   Behavior? @relation(fields: [behaviorId], references: [id])
  behaviorId String?
  group      Group?    @relation(fields: [groupId], references: [id])
  groupId    String?
}

model Behavior {
  id       String     @id @default(uuid())
  name     String
  value    Int
  group    Group?     @relation(fields: [groupId], references: [id])
  groupId  String?
  feedback Feedback[]
}

model Redeemed {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  reward    Reward?  @relation(fields: [rewardId], references: [id])
  rewardId  String?
  createdAt DateTime @default(now())
}

model Reward {
  id       String     @id @default(uuid())
  name     String
  cost     Int
  group    Group?     @relation(fields: [groupId], references: [id])
  groupId  String?
  redeemed Redeemed[]
}

model Group {
  id          String       @id @default(uuid())
  type        String
  name        String
  description String?      @default("")
  enrollId    String?      @unique
  owner       User         @relation(fields: [ownerId], references: [id])
  ownerId     String
  enrollments Enrollment[]
  behaviors   Behavior[]
  rewards     Reward[]
  feedback    Feedback[]
}

model Enrollment {
  id      String  @id @default(uuid())
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  group   Group?  @relation(fields: [groupId], references: [id])
  groupId String?
}
